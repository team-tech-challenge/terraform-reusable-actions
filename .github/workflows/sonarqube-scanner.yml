name: 'Sonarqube Scan'

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        description: 'Sonarqube token'
        required: true
      SONAR_HOST_URL:
        description: 'Sonarqube URL'
        required: true

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Initial Sonar Scanner
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.branch.name=${{ github.ref_name }}

#      - name: Quality Gate
#        id: sonar-quality-gate
#        uses: sonarsource/sonarqube-quality-gate-action@master
#        timeout-minutes: 5
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#
#      - name: Quality Gate Status
#        run: echo "Quality Gate Status is ${{ steps.sonar-quality-gate.outputs.quality-gate-status }}"